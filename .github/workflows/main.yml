name: CI/CD Pipeline with Code Guard API Scan
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest requests
      
      - name: Call Code Guard API for security scan
        id: api_call
        run: |
          echo "Starting Code Guard security scan..."
          
          # Call Code Guard API using secrets
          response=$(curl -s --location 'http://agmd.bitxiatech.com:8011/code-guard/git/pdf/scan/ci-cd' \
            --header 'sec-ch-ua-platform: "Windows"' \
            --header 'X-User-ID: ${{ secrets.CODE_GUARD_USER_ID }}' \
            --header 'sec-ch-ua: "Not;A=Brand";v="99", "Microsoft Edge";v="139", "Chromium";v="139"' \
            --header 'sec-ch-ua-mobile: ?0' \
            --header 'ngrok-skip-browser-warning: true' \
            --header 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0' \
            --header 'Accept: application/json, text/plain, */*' \
            --form "repo_url=\"${{ secrets.REPO_URL }}\"" \
            --form "branch=\"${{ secrets.BRANCH }}\"" \
            --form "token=\"${{ secrets.CODE_GUARD_TOKEN }}\"")
          
          echo "Code Guard API response: $response"
          echo "api_result=$response" >> $GITHUB_OUTPUT
      
      - name: Check Code Guard scan result
        if: always()
        run: |
          response='${{ steps.api_call.outputs.api_result }}'
          echo "Checking Code Guard scan result: $response"
          
          # Extract ci_cd_pass value (expects JSON like {"ci_cd_pass":"true"})
          ci_cd_pass=$(echo "$response" | grep -oP '(?<="ci_cd_pass":")[^"]+')

          if [ "$ci_cd_pass" = "true" ]; then
            echo "✅ Code Guard scan passed. Proceeding with deployment."
          else
            echo "❌ Code Guard scan failed or ci_cd_pass is not true. Failing the workflow."
            echo "Response received: $response"
            exit 1
          fi

      
      - name: Deploy Python backend to EC2
        if: success()  # Only deploy if tests and Code Guard scan passed
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Deploying backend on EC2..."
            # Navigate to your app directory
            cd /home/ec2-user/my-backend
            # Pull latest code from GitHub
            git reset --hard
            git pull origin main
            # Optional: Create virtualenv if not exists
            if [ ! -d venv ]; then
              python3 -m venv venv
            fi
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            # Restart your Python backend (example with systemd)
            python app.py
            echo "Deployment completed!"
